// Add a new todo (by submitting a form)
// Mark a todo as completed (cross out the text of the todo)
// Remove a todo
// Part 2
// Now that you have a functioning todo app, save your todos in 
// localStorage! Make sure that when the page refreshes, the todos on the page remain there.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=x`, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <h1>Your Todos</h1>
    <ul id="todoList">

    </ul>
    <form action="#" id="newTodoForm">
        <label for="task">Task: </label>  
        <input type="text" name="task" id="task" autofocus>
        <!-- solution: autofocus -->
        <input type="submit" value="Add Todo">
    </form>
    <script src="todos.js"></script>
  
</body>
</html>



//////////////////

document.addEventListener("DOMContentLoaded", function() {
  let todoForm = document.querySelector("#newTodoForm");
  let todoList = document.querySelector("#todoList");

  todoForm.addEventListener("submit", function(event){
    event.preventDefault();

    let removeButton = document.createElement("button");
    removeButton.innerText = "remove";

    let newTodo = document.createElement("li");
    newTodo.innerText = document.querySelector("#task").value;

    todoList.append(newTodo);
    newTodo.append(removeButton);

    todoForm.reset();
    //todoForm = ''; does not work//
  });
    // copy and now understand why we need lowercase here;
  todoList.addEventListener("click", function(event) {
    const targetTagToLowerCase = event.target.tagName.toLowerCase();
    if (targetTagToLowerCase === "li") {
      event.target.style.textDecoration = "line-through";
    } else if (targetTagToLowerCase === "button") {
      event.target.parentNode.remove();
    }
  });
});

//////////////




const todoForm = document.querySelector("#newTodoForm");
const todoList = document.querySelector("#todoList");

// retrieve from localStorage
const savedTodos = JSON.parse(localStorage.getItem("todos")) || [];
// why do we need || [] here?
for (let i of savedTodos) {
  let newTodo = document.createElement("li");
  newTodo.innerText = savedTodos[i].task;
  newTodo.isCompleted = savedTodos[i].isCompleted ? true : false;
  if (newTodo.isCompleted) {
    newTodo.style.textDecoration = "line-through";
  }
  todoList.append(newTodo);
}

todoForm.addEventListener("submit", function(event) {
  event.preventDefault();
  let newTodo = document.createElement("li");
  let taskValue = document.querySelector("#task").value;
  newTodo.innerText = taskValue;
  newTodo.isCompleted = false;
  todoForm.reset();
  todoList.appendChild(newTodo);


  // save to localStorage
  savedTodos.push({ task: newTodo.innerText, isCompleted: false });
  // wouldn't it be easier if we creat a new variable?
  localStorage.setItem("todos", JSON.stringify(savedTodos));
});

todoList.addEventListener("click", function(event) {
  let clickedListItem = event.target;

  if (!clickedListItem.isCompleted) {
    clickedListItem.style.textDecoration = "line-through";
    clickedListItem.isCompleted = true;
  } else {
    clickedListItem.style.textDecoration = "none";
    clickedListItem.isCompleted = false;
  }

  // breaks for duplicates - another option is to have dynamic IDs
  for (let i of savedTodos) {
    if (savedTodos[i].task === clickedListItem.innerText) {
      savedTodos[i].isCompleted = !savedTodos[i].isCompleted;
      localStorage.setItem("todos", JSON.stringify(savedTodos));
    }
  }
});

